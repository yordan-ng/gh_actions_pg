name: Docker Image CI

on:
  push:
    branches:
      - 'main'
    tags:
      - v[0-9]+*
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'tag for this image build'
        required: true
        default: 'staging'

jobs:
  docker:
    runs-on: ubuntu-latest
    env:
      PILLAR: staging       # sets the sefault. It is changed later if necessary
      PILLARR: staging
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Print info
        run: |
          echo "ref_type: ${{ github.ref_type }}"
          echo "ref_name: ${{ github.ref_name }}"
          echo "base_red: ${{ github.event.base_ref }}"
          echo "ref: ${{ github.ref }}"
          echo "head_ref: ${{ github.head_ref }}"
          echo "event_name: ${{ github.event_name }}"
          echo "event.inputs: ${{ github.event.inputs }}"
          echo "event.inputs.image_name: ${{ github.event.inputs.image_tag }}"
          echo "Tags: ${{ github.event.inputs.tags }}"
      -
        name: Set git tag in output
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      -
        name: Set git tag 2
        id: vars2
        run: echo "RELEASE_VERSION2=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - 
        name: Test
        run: |
          echo $RELEASE_VERSION2
          echo ${{ env.RELEASE_VERSION2 }}
      -
        name: Check output
        env:
          RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
        run: |
          echo $RELEASE_VERSION
          echo ${{ steps.vars.outputs.tag }}
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: name/app    
      -
        name: Check docker-meta
        id: check_meta
        run: |
          echo "${{ steps.meta.outputs.tags }}"
          echo "${{ steps.meta.outputs.labels }}"
          echo "${{ github.event_name == 'push' }}"
          echo "${{ github.event_name != 'pull_request' }}"
          echo "${{ github.event.inputs.image_tag }}"
          echo "${{ github.event.ref_type }}"
          echo "${{ github.event.ref }}"
      - 
        name: Test env setup
        id: set_env_pr
        if: startsWith( github.ref, 'refs/tags/v')
        run: 
          echo "PILLAR=production" >> $GITHUB_ENV
      -
        name: Test Not StartsWith 
        id: set_env_sg
        if: startsWith(github.ref, 'refs/tags/') != true
        run: 
          echo "PILLAR=staging" >> $GITHUB_ENV
      -
        name: Test What is the environment
        run: echo "The Pillar is ${{ env.PILLAR }}"
      -
        name: Docker meta
        id: meta2
        uses: docker/metadata-action@v3
        with:
          images: name/app
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      -
        name: Check docker-meta
        id: check_meta2
        run: |
          echo "${{ steps.meta2.outputs.tags }}"
          echo "${{ steps.meta2.outputs.labels }}"
          echo "----------------------------------"
          echo "${{ github.event_name }}"
          echo "${{ github.event.inputs.image_tag }}"
          echo "${{ github.event.inputs }}"
          echo "${{ github.event }}"
      -
        name: Check if tagged
        id: istagged
        if: |
          (github.event_name == 'push' && github.ref_type == 'tag' && startsWith(github.ref, 'refs/tags/v')) ||
          (github.event_name == 'workflow_dispatch' && startsWith(github.event.inputs.image_tag, 'v'))
        run: echo "PILLARR=production" >> $GITHUB_ENV
      -
        name: Check pillar
        id: checkpillar
        run: echo "Pillar is ${{ env.PILLARR }}"
      -
        name: Dump all secrets to file
        run: bash ./.github/getsec.sh "$secrets" ${{ env.PILLARR }}
        env:
          secrets: ${{ toJson(secrets) }}
      -
        name: Check the file contents
        run: cat ./deployment.env
